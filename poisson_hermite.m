function [ A ] = poisson_hermite( mat, p )
%POISSON_HERMITE Return a discrete anisotropic Poisson operator

load('local_matrices.mat'); % local matrices are generated by hermite_basis.m

N = length(p);

inds = [1:(N-1); (1:(N-1))+N; 2:N; (2:N)+N];

dmat = diff(mat)./(p(2:end) - p(1:(end-1)));

A = sparse(2*N, 2*N);

% loop over local system matrix
for itr=1:4
    for jtr=1:4
        % (a(x) u')' v = 1 + 2
        abu = s1{jtr, itr}(mat(1:(end-1)), mat(2:end), p(1:(end-1)), p(2:end));
        A = A + sparse(inds(itr, :), inds(jtr, :), abu, 2*N, 2*N);
    end
end

end

